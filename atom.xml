<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>星魂阁</title>
  
  <subtitle>consolexin</subtitle>
  <link href="/blogs/atom.xml" rel="self"/>
  
  <link href="https://consolexin.github.io/"/>
  <updated>2018-11-24T09:56:36.991Z</updated>
  <id>https://consolexin.github.io/</id>
  
  <author>
    <name>Xin Hun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>腾讯云CentOS7搭建Hexo博客</title>
    <link href="https://consolexin.github.io/2018/11/24/%E8%85%BE%E8%AE%AF%E4%BA%91CentOS7%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://consolexin.github.io/2018/11/24/腾讯云CentOS7搭建Hexo博客/</id>
    <published>2018-11-24T09:54:31.000Z</published>
    <updated>2018-11-24T09:56:36.991Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>Windows系统中：</p><ul><li>具有 GitHub账号</li><li>已安装Git客户端</li><li>已安装XShell连接远程服务器</li></ul><p>CentOS7系统中：</p><ul><li>安装Nginx服务</li><li>安装Node.js服务（注意gcc版本必须是4.9及以上，否则不能安装成功）</li><li>安装Git进行部署</li></ul><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><blockquote><p>用Xshell连接CentOS7云服务器</p></blockquote><p>输入命令，安装Git，完成之后用<code>git --version</code>检查版本号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure></p><h3 id="创建Git用户"><a href="#创建Git用户" class="headerlink" title="创建Git用户"></a>创建Git用户</h3><p>Xshell中输入命令，创建Git用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure></p><p>修改权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 740 /etc/sudoers</span><br></pre></td></tr></table></figure></p><p>编辑内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure></p><p>找到下面的内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Allow root to run any commands anywhere</span><br><span class="line">root    ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure></p><p>按<code>i</code>进入编辑模式，在下面添加一行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git     ALL=(ALL)       ALL</span><br></pre></td></tr></table></figure></p><p>按<code>Esc</code>退出编辑模式，按<code>:wq</code>保存退出，再输入下面的语句更改权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br></pre></td></tr></table></figure></p><p>使用<code>su root</code>切换到<strong>root</strong>用户，然后设置Git用户的密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#需要root权限</span><br><span class="line">su root</span><br><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure></p><p>创建.ssh文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/git/.ssh</span><br></pre></td></tr></table></figure></p><p>使用下面的命令新建一个SSH Key，<code>youremail</code>是你自己的邮箱，连续三个回车<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git/.ssh</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure></p><p>使用<code>ls -a</code>查看隐藏文件，此时应该有<code>id_rsa.pub</code>文件，用<code>cat</code>命令查看再手动拷贝其内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -a</span><br><span class="line">cat /home/git/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><blockquote><p>CentOS和Ubuntu系统下的拷贝命令是<code>Ctrl + insert</code>，，粘贴命令是<code>Shift + insert</code></p></blockquote><p>创建<code>authorized_keys</code>文件，将刚刚复制的内容拷贝到这个文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /home/git/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p>修改文件和文件夹的权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 /home/git/.ssh/authorzied_keys</span><br><span class="line">chmod 700 /home/git/.ssh</span><br></pre></td></tr></table></figure></p><p><strong>验证是否可以登录成功</strong><br>在Windows系统中，打开<strong>Git Bash</strong>软件，输入<code>ssh -v git@SERVER</code>命令，其中<code>SERVER</code>是云服务器的IP地址，如果能够连接，那么说明ssh可以免密登录</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在Xshell中，通过npm进行全局安装hexo框架<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><p>进入<code>Nginx</code>存放网站的根目录<code>/usr/local/nginx/html</code>，初始化Hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init Blog</span><br></pre></td></tr></table></figure></p><p>输入<code>hexo s</code>开启服务器，此时可以通过<code>SERVERIP:4000</code>访问，其中<code>SERVERIP</code>指的是云服务器的公网地址。但是这并没有部署到云服务器上，因为控制台按<code>Ctrl + C</code>就停止了</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>用<code>cd /home/git</code>切换到Git用户的目录<br>初始化裸仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure></p><p>改变其拥有者为git用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git hexo.git</span><br></pre></td></tr></table></figure></p><p>新建<code>post-receive</code>文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /home/git/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><p>在文件中输入下面的内容，在这里我的网站目录是<code>/usr/local/nginx/html/blog</code>，我的仓库目录是<code>/home/git/blog.git</code><br>请根据具体情况进行修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#！/bin/sh</span><br><span class="line">git --work-tree=/usr/share/nginx/html/blog --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure></p><p>保存退出，赋予可执行权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h4><p>进入到博客根目录进行配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/html/blog</span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure></p><p>找到deploy部分，替换成如下内容，其中<code>SERVERIP</code>为云服务器的外网IP地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@SERVERIP:/home/git/blog.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><h4 id="配置URL"><a href="#配置URL" class="headerlink" title="配置URL"></a>配置URL</h4><p>在博客根目录中，对<code>_config.yml</code>编辑，找到<strong>URL</strong>部分<br>其中<code>SERVERIP</code>为云服务器的外网IP地址<br>完成之后，到Xshell中/blog目录下，执行<code>hexo g -d</code>命令<br>然后打开浏览器，输入<code>http://SERVERIP/blog/</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url: http://SERVERIP</span><br><span class="line">root: /blog/</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;p&gt;Windows系统中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具有 GitHub账号&lt;/li&gt;
&lt;li&gt;已安装Git客户端&lt;/li&gt;
&lt;
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://consolexin.github.io/tags/Hexo/"/>
    
      <category term="CentOS" scheme="https://consolexin.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo采用Next主题</title>
    <link href="https://consolexin.github.io/2018/11/23/Hexo%E9%87%87%E7%94%A8Next%E4%B8%BB%E9%A2%98/"/>
    <id>https://consolexin.github.io/2018/11/23/Hexo采用Next主题/</id>
    <published>2018-11-23T07:13:21.000Z</published>
    <updated>2018-11-23T09:52:44.876Z</updated>
    
    <content type="html"><![CDATA[<p>由于Hexo默认的主题是<code>landscape</code>，于是我想将主题改为<code>Next</code></p><h3 id="安装Next"><a href="#安装Next" class="headerlink" title="安装Next"></a>安装Next</h3><p>在博客根目录下，右键，选择<code>Git Bash Here</code><br><img src="https://i.loli.net/2018/11/23/5bf7ada477a0d.png" alt="2018-11-23_153432.png"></p><p>输入命令：<code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code><br><img src="https://i.loli.net/2018/11/23/5bf7ae60a446f.png" alt="2018-11-23_153753.png"></p><div class="note info"><p>由于经常要涉及到配置文件，根目录（<code>D:\blog</code>）有一个<code>_config.yml</code>，主题目录（<code>D:\blog\themes\next</code>）下也有一个<code>_config.yml</code><br>于是将根目录下的配置文件称为<strong>站点配置文件</strong>，主题目录下的配置文件称为<strong>主题配置文件</strong>，</p></div><h3 id="启用Next主题"><a href="#启用Next主题" class="headerlink" title="启用Next主题"></a>启用Next主题</h3><p>编辑站点配置文件，找到<code>theme</code>关键字，将其值修改为next，如下所示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p><div class="note warning"><p>注意冒号后面有一个空格，所有配置文件，键后面是冒号，冒号后面都有空格</p></div><h3 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h3><p>next主题有四种风格，在主题配置文件中，将<code>scheme</code>设置为喜欢的风格<br><img src="https://i.loli.net/2018/11/23/5bf7b25a5b1da.png" alt="2018-11-23_155437.png"></p><h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>在站点配置文件中，将<code>language</code>设置为中文，注意，这个语言必须在主题的<code>language</code>目录下面有才行<br><img src="https://i.loli.net/2018/11/23/5bf7b2fa4ab21.png" alt="2018-11-23_155710.png"></p><h3 id="修改菜单项"><a href="#修改菜单项" class="headerlink" title="修改菜单项"></a>修改菜单项</h3><p>在主题的配置文件中，选择想要展示的部分，<code>#</code>是注释，<code>||</code>后面是图标的名字，对应着FontAwesome图标库里的名字，Next主题默认的FontAwesome版本为3<br><img src="https://i.loli.net/2018/11/23/5bf7b3870a15f.png" alt="2018-11-23_155953.png"></p><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p>在站点配置文件中，新增<code>avatar</code>键，值为链接的地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: https://i.loli.net/2018/11/23/5bf79ec4d552f.png</span><br></pre></td></tr></table></figure></p><h3 id="添加标签"><a href="#添加标签" class="headerlink" title="添加标签"></a>添加标签</h3><p>如果在主题配置文件中的<code>menu</code>选项中开启了标签（<code>tags</code>），那么在博客主页中有标签图标，但是点进去，会有<code>Cannot GET /tags/</code>，这是因为还没有增加标签页面</p><h4 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h4><p>cmd进入博客根目录，输入<code>hexo new page tags</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\blog&gt;hexo new page tags</span><br></pre></td></tr></table></figure></p><h4 id="修改type"><a href="#修改type" class="headerlink" title="修改type"></a>修改type</h4><p>编辑刚刚新建的<code>index.md</code>文件，新增<code>type</code>属性，值为<code>&quot;tags&quot;</code><br><img src="https://i.loli.net/2018/11/23/5bf7b63ebd0c0.png" alt="2018-11-23_161133.png"></p><h4 id="为文章添加标签"><a href="#为文章添加标签" class="headerlink" title="为文章添加标签"></a>为文章添加标签</h4><p>当需要为文章添加标签时，填入<code>tags</code>对应的值即可，如果有多个，用中括号括起来，标签之间用逗号隔开<br><img src="https://i.loli.net/2018/11/23/5bf7b6d8a1218.png" alt="2018-11-23_161407.png"><br><div class="note danger"><p>逗号必须是英文的</p></div></p><div class="note info"><p>categories，about等页面添加的方式和tags添加的方式一样</p></div><h3 id="在博客页面的右上角添加Github导航条"><a href="#在博客页面的右上角添加Github导航条" class="headerlink" title="在博客页面的右上角添加Github导航条"></a>在博客页面的右上角添加Github导航条</h3><p>在<a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a>或者<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a>选择想要的GitHub样式，复制代码，到主题目录（根目录下的<em>themes/next</em>）下的<code>layout/_layout.swig</code><br>编辑这个文件，在合适的位置</p><blockquote><ul><li>加入div，为<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code></li><li>粘贴刚刚拷贝的链接，注意将<code>href</code>中的链接进行修改，<code>you</code>改为自己的用户名就行了</li></ul></blockquote><p><img src="https://i.loli.net/2018/11/23/5bf7bb1b4519b.png" alt="2018-11-23_163212.png"></p><h3 id="设置动态背景"><a href="#设置动态背景" class="headerlink" title="设置动态背景"></a>设置动态背景</h3><p>在主题配置文件中，找到<code>canvas_nest</code>键，修改其值为<code>true</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure></p><h3 id="修改文章内链接的样式"><a href="#修改文章内链接的样式" class="headerlink" title="修改文章内链接的样式"></a>修改文章内链接的样式</h3><p>到主题目录(<code>themes/next</code>)下的<code>source/css/_common/components/post/post.styl</code>，在文件的末尾添加下列代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  color: #0593d3; //原始链接颜色</span><br><span class="line">  <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  border-bottom: 1px solid #0593d3; //底部分割线颜色</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    color: #fc6423; //鼠标经过颜色</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;</span><br><span class="line">    border-bottom: 1px solid #fc6423; //底部分割线颜色</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改底部标签的样式"><a href="#修改底部标签的样式" class="headerlink" title="修改底部标签的样式"></a>修改底部标签的样式</h3><p>到主题目录下的<code>layout\_macro\post.swig</code>，搜索<code>rel=&quot;tag&quot;&gt;#</code>，将<code>#</code>替换为<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p><h3 id="修改单行代码块的样式"><a href="#修改单行代码块的样式" class="headerlink" title="修改单行代码块的样式"></a>修改单行代码块的样式</h3><p>到主题目录下的<code>source\css\_custom\custom.styl</code>，添加下列代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7600</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="侧边栏的小图标"><a href="#侧边栏的小图标" class="headerlink" title="侧边栏的小图标"></a>侧边栏的小图标</h3><p>打开主题配置文件，搜索<code>social</code><br>选择需要展示的社交账号<br>格式为：</p><blockquote><p>[社交平台名]: [社交地址] || [图标名称]</p></blockquote><h3 id="文章主页添加阴影效果"><a href="#文章主页添加阴影效果" class="headerlink" title="文章主页添加阴影效果"></a>文章主页添加阴影效果</h3><p>打开主题目录下的<code>source\css\_custom\custom.styl</code>，添加下面的代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 203, .5);</span><br><span class="line">  <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><h3 id="博客内添加搜索功能"><a href="#博客内添加搜索功能" class="headerlink" title="博客内添加搜索功能"></a>博客内添加搜索功能</h3><ul><li><p>安装 hexo-generator-search</p><blockquote><p>npm install hexo-generator-search —save</p></blockquote></li><li><p>安装 hexo-generator-searchdb</p><blockquote><p>npm install hexo-generator-searchdb —save</p></blockquote></li><li><p>编辑站点配置文件，添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li><p>编辑主题配置文件，搜索<code>local search</code>，设置为<code>true</code><br><img src="https://i.loli.net/2018/11/23/5bf7c0b1a1161.png" alt="2018-11-23_165609.png"></p></li></ul><h3 id="添加网易云外链"><a href="#添加网易云外链" class="headerlink" title="添加网易云外链"></a>添加网易云外链</h3><ul><li>打开<a href="https://music.163.com" target="_blank" rel="noopener">网易云音乐</a>，登录账户，进入我的主页，选择歌单，生成外链播放器，拷贝HTML代码</li><li>将代码粘贴到合适的位置，比如主题目录下的<code>layout/_macro/sidebar.swig</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于Hexo默认的主题是&lt;code&gt;landscape&lt;/code&gt;，于是我想将主题改为&lt;code&gt;Next&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装Next&quot;&gt;&lt;a href=&quot;#安装Next&quot; class=&quot;headerlink&quot; title=&quot;安装Next&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://consolexin.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="https://consolexin.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Github+Hexo+Next搭建个人博客</title>
    <link href="https://consolexin.github.io/2018/11/23/Github-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://consolexin.github.io/2018/11/23/Github-Hexo-Next搭建个人博客/</id>
    <published>2018-11-23T04:50:13.000Z</published>
    <updated>2018-11-23T07:02:11.507Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装Node-js环境"><a href="#安装Node-js环境" class="headerlink" title="安装Node.js环境"></a>安装Node.js环境</h4><p>进入<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Nodejs官网</a>下载稳定版本<br><img src="https://i.loli.net/2018/11/23/5bf7a24d8c25b.png" alt="Alt text"><br>一路next，安装好后，打开cmd，如果显示nodejs和npm版本号，则安装成功<br><img src="https://i.loli.net/2018/11/23/5bf7a2d5d63ee.png" alt="Alt text"></p><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>进入<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git官网</a>下载合适的版本<br><img src="https://i.loli.net/2018/11/23/5bf7a3f91512f.png" alt="Alt text"><br>如果在任意一个文件夹下面都有这两个，那么安装Git成功<br><img src="https://i.loli.net/2018/11/23/5bf7a42819c6c.png" alt="Alt text"></p><h4 id="注册一个GitHub账户"><a href="#注册一个GitHub账户" class="headerlink" title="注册一个GitHub账户"></a>注册一个GitHub账户</h4><p>新建一个项目， 名称为<code>账户名.github.io</code>，勾选<strong>Initialize this repository with a README</strong><br><img src="https://i.loli.net/2018/11/23/5bf7a45692d6e.png" alt="@由于我的GitHub之前已经存在这个项目，这里才会报error"></p><p>如果已经有一个项目名称为<code>账户名.github.io</code>，那么新建项目的项目名称直接为<code>项目名</code><br><img src="https://i.loli.net/2018/11/23/5bf7a46a273c1.png" alt="Alt text"></p><p>点击项目的设置<br><img src="https://i.loli.net/2018/11/23/5bf7a48bdd74f.png" alt="Alt text"></p><p>下拉到<strong>GitHub Pages</strong>部分，Source下拉框的选项如果是<code>None</code>，那么要改为<code>master branch</code>，点击<code>save</code>按钮保存，上方会显示一个网址，这个就是被部署到外网的网址，能够通过外网访问<br><img src="https://i.loli.net/2018/11/23/5bf7a4b6a027a.png" alt="Alt text"></p><h4 id="本地安装Hexo"><a href="#本地安装Hexo" class="headerlink" title="本地安装Hexo"></a>本地安装Hexo</h4><p>在本地创建一个文件夹，作为博客系统的根目录，我在D盘建立了一个blog文件夹，然后cmd进入这个目录<br><img src="https://i.loli.net/2018/11/23/5bf7a4d2cfd07.png" alt="Alt text"></p><p>输入<code>npm install hexo -g</code>，开始安装Hexo</p><p>输入<code>hexo -v</code>，检查hexo是否安装成功</p><p>输入<code>hexo init</code>，初始化该文件夹</p><p>输入<code>npm install</code>，安装所需要的组件</p><p>输入<code>hexo g</code>，g是generate的缩写</p><p>输入<code>hexo s</code>，s是start的缩写，表明开启服务器，此时浏览器打开该网址<br><img src="https://i.loli.net/2018/11/23/5bf7a4f2dc21e.png" alt="Alt text"></p><p>如果出现下图，那么Hexo就搭建成功了<br><img src="https://i.loli.net/2018/11/23/5bf7a507f1e63.png" alt="Alt text"></p><p><strong>Problem：</strong>如果无法访问，那么是端口被占用，使用<code>hexo server -p 端口号</code>，切换端口即可，这里端口号是用户的端口号，不能和常用端口号冲突，所以最好使用<strong>1024到5000</strong>的端口号</p><h4 id="本地连接GitHub"><a href="#本地连接GitHub" class="headerlink" title="本地连接GitHub"></a>本地连接GitHub</h4><p>现在只是在本地上搭建成功，没有上传到GitHub上，外网不能访问，那么要将本地与GitHub联系起来。</p><p>在博客根目录下，右键，选择Git Bash Here<br><img src="https://i.loli.net/2018/11/23/5bf7a524431fd.png" alt="Alt text"></p><p><strong>设置用户名，邮箱</strong></p><p>使用<code>git config --global user.name &quot;username&quot;</code>设置用户名，注意username是自己的GitHub用户名，邮箱是GitHub邮箱<br><img src="https://i.loli.net/2018/11/23/5bf7a53bb9d51.png" alt="Alt text"></p><p>使用<code>git config --global user.email &quot;email&quot;</code>设置邮箱，注意eamil指的是自己的GitHub绑定的邮箱<br><img src="https://i.loli.net/2018/11/23/5bf7a53e81adb.png" alt="Alt text"></p><p>输入 <code>cd ~/.ssh</code>，再输入<code>ls</code>查看该文件夹下的文件，注意<code>~</code>表示家目录，指的是当前用户的目录，Windows系统中如果不是Administrator，则为<strong>C://Users//username</strong>，如果是Administrator则为<strong>C://Users//Administrator</strong><br>Linux系统中如果不是root则为<strong>/home/username</strong>，如果是root则为<strong>/root</strong><br>反正<code>cd ~/.ssh</code>就是要进入当前目录下的<strong>.ssh</strong>文件夹<br><img src="https://i.loli.net/2018/11/23/5bf7a54286cbf.png" alt="Alt text"></p><p>输入<code>ssh-keygen -t rsa -C &quot;eamil&quot;</code>，这里的email是自己的GitHub绑定的邮箱地址，连续三个回车</p><p>在当前用户目录下的.ssh文件夹下，有个<code>id_rsa.pub</code>文件，复制其内容<br><img src="https://i.loli.net/2018/11/23/5bf7a54ce073d.png" alt="Alt text"></p><p>到GitHub网站，在<code>Settings</code>页面左边的<code>SSH and GPG keys</code>部分，新建一个SSH keys，粘贴刚刚复制过来的内容，匹配密钥对<br><img src="https://i.loli.net/2018/11/23/5bf7a553416b0.png" alt="Alt text"></p><p>再到Git中，输入<code>ssh -T git@github.com</code>，如果出现<strong>Hi，username</strong>，那么表明本地成功连接了GitHub<br><img src="https://i.loli.net/2018/11/23/5bf7a557e0967.png" alt="Alt text"></p><p>配置deployment，在项目文件夹中，找到配置文件<strong>_config.yml</strong>，修改repo的值，增加<strong>branch</strong>的值为<strong>master</strong><br><img src="https://i.loli.net/2018/11/23/5bf7a5bd7eef4.png" alt="Alt text"></p><p>repo的值是GitHub项目右下角，<strong>Use SSH</strong>的，以<strong>git</strong>结尾的一个链接， 默认是<strong>Use HTTPS</strong>，使用<strong>Use SSH</strong>选项就能看到以<strong>git</strong>结尾的链接。复制这个以<strong>git</strong>结尾的链接，粘贴到配置文件<strong>_config.yml</strong>，修改repo的值<br><img src="https://i.loli.net/2018/11/23/5bf7a5c225792.png" alt="Alt text"></p><p>cmd进入博客根目录，安装一个扩展，<code>npm install hexo-deployer-git --save</code><br><img src="https://i.loli.net/2018/11/23/5bf7a5c630157.png" alt="Alt text"></p><p>新建一片博客，在cmd进入根目录后，用<code>hexo new post &quot;文章名&quot;</code><br><img src="https://i.loli.net/2018/11/23/5bf7a5cbb7dc3.png" alt="Alt text"></p><p>找到那篇文章，文章是以.md结尾，Markdown格式，编辑内容，使用<code>hexo d -g</code>生成并且部署到GitHub上，使用之前GitHub Pages的网址就能够访问了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;安装Node-js环境&quot;&gt;&lt;a href=&quot;#安装Node-js环境&quot; class=&quot;headerlink&quot; title=&quot;安装Node.js环境&quot;&gt;&lt;/a&gt;安装Node.js环境&lt;/h4&gt;&lt;p&gt;进入&lt;a href=&quot;https://nodejs.org/en/&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>nice to see you</title>
    <link href="https://consolexin.github.io/2018/11/19/nice-to-see-you/"/>
    <id>https://consolexin.github.io/2018/11/19/nice-to-see-you/</id>
    <published>2018-11-19T09:21:01.000Z</published>
    <updated>2018-11-22T02:42:47.686Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎使用-Cmd-Markdown-编辑阅读器"><a href="#欢迎使用-Cmd-Markdown-编辑阅读器" class="headerlink" title="欢迎使用 Cmd Markdown 编辑阅读器"></a>欢迎使用 Cmd Markdown 编辑阅读器</h1><hr><p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p><blockquote><ul><li>整理知识，学习笔记</li><li>发布日记，杂文，所见所想</li><li>撰写发布技术文稿（代码支持）</li><li>撰写发布学术论文（LaTeX 公式支持）</li></ul></blockquote><p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"></p><p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p><h3 id="Windows-Mac-Linux-全平台客户端"><a href="#Windows-Mac-Linux-全平台客户端" class="headerlink" title="Windows/Mac/Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="noopener">Windows/Mac/Linux 全平台客户端</a></h3><blockquote><p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p></blockquote><hr><h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p><h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表" target="_blank" rel="noopener">Todo 列表</a></h3><ul><li>支持以 PDF 格式导出文稿</li><li>改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li><li>新增 Todo 列表功能</li><li>修复 LaTex 公式渲染问题</li><li>新增 LaTex 公式编号功能</li></ul><h3 id="2-书写一个质能守恒公式LaTeX"><a href="#2-书写一个质能守恒公式LaTeX" class="headerlink" title="2. 书写一个质能守恒公式LaTeX"></a>2. 书写一个质能守恒公式<sup><a href="#fn_LaTeX" id="reffn_LaTeX">LaTeX</a></sup></h3><script type="math/tex; mode=display">E=mc^2</script><h3 id="3-高亮一段代码code"><a href="#3-高亮一段代码code" class="headerlink" title="3. 高亮一段代码code"></a>3. 高亮一段代码<sup><a href="#fn_code" id="reffn_code">code</a></sup></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure><h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="noopener">流程图</a></h3><div id="flowchart-0" class="flow-chart"></div><h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="noopener">序列图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图" target="_blank" rel="noopener">甘特图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure><h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><div class="table-container"><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">$1</td><td style="text-align:center">234</td></tr></tbody></table></div><h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="noopener">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="noopener">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p><p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p><hr><h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p><h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p><h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p><p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor"></p><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p><h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p><h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p><h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p><p><img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager"></p><p>通过管理工具栏可以：</p><ul><li>发布：将当前的文稿生成固定链接，在网络上发布，分享</li><li>新建：开始撰写一篇新的文稿</li><li>删除：删除当前的文稿</li><li>导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地</li><li>列表：所有新增和过往的文稿都可以在这里查看、操作</li><li>模式：切换 普通/Vim/Emacs 编辑模式</li></ul><h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager"></p><p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p><p>工具栏上的五个图标依次为：</p><ul><li><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落</li><li><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置</li><li><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！</li><li><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验</li><li><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</li></ul><h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p><h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p><p>标签： 未分类</p><p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p><p><img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list"></p><h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p><hr><p><i class="fab fa-weixin"></i> someones</p><p>再一次感谢您花费时间阅读这份欢迎稿，点击  <i class="icon-file"></i>  (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p><p>作者 <a href="http://weibo.com/ghosert" target="_blank" rel="noopener">@ghosert</a><br>2016 年 07月 07日    </p><blockquote id="fn_LaTeX"><sup>LaTeX</sup>. 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。<a href="#reffn_LaTeX" title="Jump back to footnote [LaTeX] in the text."> &#8617;</a></blockquote><blockquote id="fn_code"><sup>code</sup>. 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。<a href="#reffn_code" title="Jump back to footnote [code] in the text."> &#8617;</a></blockquote><p><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Startop=>operation: Your Operationcond=>condition: Yes or No?e=>endst->op->condcond(yes)->econd(no)->op</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;欢迎使用-Cmd-Markdown-编辑阅读器&quot;&gt;&lt;a href=&quot;#欢迎使用-Cmd-Markdown-编辑阅读器&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用 Cmd Markdown 编辑阅读器&quot;&gt;&lt;/a&gt;欢迎使用 Cmd Markdown
      
    
    </summary>
    
      <category term="随便写写" scheme="https://consolexin.github.io/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"/>
    
    
      <category term="tags" scheme="https://consolexin.github.io/tags/tags/"/>
    
      <category term="nice-to-see-you" scheme="https://consolexin.github.io/tags/nice-to-see-you/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://consolexin.github.io/2018/11/19/hello-world/"/>
    <id>https://consolexin.github.io/2018/11/19/hello-world/</id>
    <published>2018-11-19T06:53:55.626Z</published>
    <updated>2018-11-20T17:03:02.267Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><script type="math/tex; mode=display">\begin{eqnarray}\nabla\cdot\vec{E} &=& \frac{\rho}{\epsilon_0} \\\nabla\cdot\vec{B} &=& 0 \\\nabla\times\vec{E} &=& -\frac{\partial B}{\partial t} \\\nabla\times\vec{B} &=& \mu_0\left(\vec{J}+\epsilon_0\frac{\partial E}{\partial t} \right)\end{eqnarray}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
